package ${package.Controller};

import java.util.Map;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import javax.annotation.Resource;
import com.baomidou.mybatisplus.plugins.Page;
import com.api.common.BaseController;
import com.api.common.bean.AbstractBean;
import com.api.common.exception.EnumSvrResult;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#set($modelName = $entity.toLowerCase().substring(0,1)+$entity.substring(1))
## $entity.toLowerCase().substring(0,1)$entity.substring(1)
/**
* <p>${table.comment} 前端控制器</p>
* Created by ${author} on ${date}.
*/
@Controller
@RequestMapping("/${modelName}/")
@SuppressWarnings("unused")
public class ${table.controllerName} extends BaseController {

    @Resource
    private I${entity}Service ${modelName}Service;

    @RequestMapping("listUI")
    public String listUI(Map<String,Object> map,Integer page) {
        Page<${entity}> list = ${modelName}Service.selectPage(new Page<${entity}>(null==page?0:page, 10));
        map.put("page", list);
        return "${modelName}/list";
    }

    @RequestMapping("form")
    public String form(Map<String,Object> map) {
        return "${modelName}/form";
    }

    @RequestMapping(value = "save", method = RequestMethod.POST)
    @ResponseBody
    public AbstractBean add(${entity} $entity.toLowerCase()){
        AbstractBean bean = new AbstractBean();
        if(!${modelName}Service.insertOrUpdate($entity.toLowerCase())){
            bean.setStatus(EnumSvrResult.ERROR.getVal());
            bean.setMessage(EnumSvrResult.ERROR.getName());
        }
        return bean;
    }

    @RequestMapping(value="{id}/delete",method=RequestMethod.DELETE)
    @ResponseBody
    public AbstractBean delete(@PathVariable Integer id) {
        AbstractBean bean = new AbstractBean();
        if(!${modelName}Service.deleteById(id)){
            bean.setStatus(EnumSvrResult.ERROR.getVal());
            bean.setMessage(EnumSvrResult.ERROR.getName());
        }
        return bean;
    }

    @RequestMapping(value="{id}/select",method=RequestMethod.GET)
    public String select(Map<String,Object> map,@PathVariable Integer id) {
        ${entity} $entity.toLowerCase() = ${modelName}Service.selectById(id);
        map.put("record", $entity.toLowerCase());
        return "${modelName}/edit";
    }
}
